# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

variables:

   # Container registry service connection established during pipeline creation
   dockerRegistryServiceConnection: 'mycontainerregistry20211215'
   imageRepository: 'cuongtruonghcmpipelinesjavascriptdocker'
   containerRegistry: 'mycontainerregistry20211215'
   dockerfilePath: '**/Dockerfile'
   tag: '$(Build.BuildId)'
   imagePullSecret: 'mycontainerregistry202112157106fc5c-auth'
   k8sNamespaceForPR: 'review-app-$(System.PullRequest.PullRequestId)'

pool:
  name: Default
  demands:
   - agent.name -equals devops-agent  

stages:
 - stage: Build
   displayName: Build stage
   jobs:
   - job: Build
     displayName: Build
     steps:
     - task: Docker@2
       displayName: Build and push an image to container registry
       inputs:
         command: buildAndPush
         repository: $(imageRepository)
         dockerfile: $(dockerfilePath)
         containerRegistry: $(containerRegistry)


    #  - publish: manifests
    #    artifact: manifests

 - stage: Deploy
   displayName: Deploy stage
   dependsOn: Build

   jobs:
   - deployment: Deploy
     condition: and(succeeded(), not(startsWith(variables['Build.SourceBranch'], 'refs/pull/')))
     displayName: Deploy
     pool:
       vmImage: $(vmImageName)
     environment: 'cuongtruonghcmpipelinesjavascriptdocker'
     strategy:
       runOnce:
         deploy:
           steps:
           - task: KubernetesManifest@0
             displayName: Create imagePullSecret
             inputs:
               action: createSecret
               secretName: $(imagePullSecret)
               dockerRegistryEndpoint: $(dockerRegistryServiceConnection)

           - task: KubernetesManifest@0
             displayName: Deploy to Kubernetes cluster
             inputs:
               action: deploy
               manifests: |
                 $(Pipeline.Workspace)/manifests/deployment.yml
                 $(Pipeline.Workspace)/manifests/service.yml
               imagePullSecrets: |
                 $(imagePullSecret)
               containers: |
                 $(containerRegistry)/$(imageRepository):$(tag)
