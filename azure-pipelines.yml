# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

variables:

   # Container registry service connection established during pipeline creation
   dockerRegistryServiceConnection: 'myContainerRegistryConnection'
   imageRepository: 'cuongtruonghcmpipelinesjavascriptdocker'
   containerRegistry: 'myContainerRegistryConnection'
   dockerfilePath: '**/Dockerfile'
   tag: '$(Build.BuildId)'
   imagePullSecret: 'mycontainerregistry202112157106fc5c-auth'
   k8sNamespaceForPR: 'review-app-$(System.PullRequest.PullRequestId)'

pool:
  name: Default
  demands:
   - agent.name -equals devops-agent  

#stages:
#  - stage: Build
#    displayName: Build stage
#    jobs:
#    - job: Build
#      displayName: Build
#      steps:
#      - task: Docker@2
#        displayName: Build and push an image to container registry
#        inputs:
#          command: buildAndPush
#          repository: $(imageRepository)
#          dockerfile: $(dockerfilePath)
#          containerRegistry: $(containerRegistry)


    #  - publish: manifests
    #    artifact: manifests
stages:
 - stage: Deploy
   displayName: Deploy stage
   #dependsOn: Build

   jobs:
   - deployment: Deploy
     #condition: and(succeeded(), not(startsWith(variables['Build.SourceBranch'], 'refs/pull/')))
     displayName: Deploy
     variables:
     - name: acr-secret
       value: $(imagePullSecret)
     environment: 'cuongtruonghcmpipelinesjavascriptdocker'
     strategy:
       runOnce:
         deploy:
           steps:
          #  - task: Kubernetes@1
          #    inputs:
          #      connectionType: 'Kubernetes Service Connection'
          #      kubernetesServiceEndpoint: 'build-robot'
          #      command: 'apply'
          #      useConfigurationFile: true
          #      configuration: |
          #       $(Agent.BuildDirectory)/s/manifests/deployment.yaml
          #      secretType: 'dockerRegistry'
          #      containerRegistryType: 'Azure Container Registry'
          #  - task: Kubernetes@1
          #    inputs:
          #      connectionType: 'Kubernetes Service Connection'
          #      kubernetesServiceEndpoint: 'build-robot'
          #      command: 'apply'
          #      useConfigurationFile: true
          #      configuration: |
          #       $(Agent.BuildDirectory)/s/manifests/service.yaml
          #      secretType: 'dockerRegistry'
          #      containerRegistryType: 'Azure Container Registry'
           - task: KubernetesManifest@0
             displayName: Create imagePullSecret
             inputs:
               action: 'createSecret'
               kubernetesServiceConnection: 'build-robot'
               secretType: 'dockerRegistry'
               dockerRegistryEndpoint: $(dockerRegistryServiceConnection)
               secretName: $(imagePullSecret)
           - task: KubernetesManifest@0
             displayName: Bake manifests
             name: bake
             inputs:
               action: bake
               kubernetesServiceConnection: 'build-robot'
               helmChart: $(Agent.BuildDirectory)/s/charts/akslab.tgz
               overrides: |
                  imagePullSecrets.name:$(imagePullSecret)
           - task: KubernetesManifest@0
             displayName: Deploy to Kubernetes cluster
             inputs:
               action: deploy
               kubernetesServiceConnection: 'build-robot'
               manifests: |
                $(bake.manifestsBundle)
               imagePullSecrets: |
                $(imagePullSecret)
               containers: |
                $(containerRegistry)/$(imageRepository):$(tag)

          #  - task: Kubernetes@1
          #    inputs:
          #      connectionType: 'Kubernetes Service Connection'
          #      kubernetesServiceEndpoint: 'build-robot'
          #      command: 'apply'
          #      useConfigurationFile: true
          #      configuration: $(Agent.BuildDirectory)/s/manifests/deployment.yaml
          #      secretType: 'dockerRegistry'
          #      containerRegistryType: 'Azure Container Registry'
          #      azureSubscriptionEndpointForSecrets: 'Azure subscription 1 (9fa46d91-5a85-411e-820b-08a0788f0e88)'
          #      azureContainerRegistry: 'mycontainerregistry20211215.azurecr.io'
          #      secretName: $(imagePullSecret)

          #  - task: KubernetesManifest@0
          #    displayName: Deploy to Kubernetes cluster
          #    inputs:
          #      action: deploy
          #      kubernetesServiceConnection: 'build-robot'
          #      manifests: |
          #        $(Agent.BuildDirectory)/s/manifests/deployment.yaml
          #        $(Agent.BuildDirectory)/s/manifests/service.yaml
          #      imagePullSecrets: |
          #        $(imagePullSecret)
          #      containers: |
          #        $(containerRegistry)/$(imageRepository):$(tag)
